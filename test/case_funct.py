"""Test case single variable single constraint."""

import numpy as np
from case import Case

from mma import Bounds, Options


def funct(
    xval: np.ndarray,
) -> tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]:
    """Define a simple function with one design variable and bounds.

    Minimize:
        (x - 50)^2 + 25

    Subject to:
        1 <= x <= 100
    """
    f0val = (xval - 50) ** 2 + 25
    df0dx = 2 * (xval - 50)
    fval = np.zeros_like(xval)
    dfdx = np.zeros_like(xval)
    return f0val, df0dx, fval, dfdx


case_funct = Case(
    funct,
    np.ones((1, 1)),
    Bounds(1, 100),
    Options(iteration_count=20, move_limit=1),
    kktnorms=np.array(
        [
            945.5010503156099,
            83.22776450558551,
            508.031547086969,
            133.51423956455457,
            399.58290753687777,
            41.65811476144007,
            300.3384119150607,
            52.8441702285137,
            89.69810079882957,
            85.15190767142246,
            39.87386173181551,
            49.154729685434674,
            13.704800427245845,
            30.61577350693798,
            2.4669195525396455,
            21.083971299040286,
            5.528501973894438,
            9.206755739925754,
            8.536500269119323,
            6.110113729328852,
        ]
    ),
    vec1=np.array(
        [
            [44.80250005, 0],
            [1633.00999442, 0],
            [203.48960167, 0],
            [603.97983997, 0],
            [29.55139587, 0],
            [287.54951675, 0],
            [36.34095749, 0],
            [56.55505136, 0],
            [51.67348862, 0],
            [30.67764199, 0],
            [33.4123934, 0],
            [25.6365206, 0],
            [28.20747259, 0],
            [25.00044915, 0],
            [26.52141413, 0],
            [25.11727639, 0],
            [25.30089909, 0],
            [25.27108347, 0],
            [25.13715369, 0],
            [25.2710832, 0],
        ]
    ),
    vec2=np.array(
        [
            [45.54999999],
            [90.09999993],
            [36.63999994],
            [74.06199992],
            [47.86659993],
            [66.20337979],
            [53.36763381],
            [44.3826117],
            [55.16463829],
            [47.61721969],
            [52.90041263],
            [49.20217759],
            [51.79094182],
            [49.97880676],
            [51.23345617],
            [50.34245641],
            [49.45145731],
            [50.52065676],
            [49.62965734],
            [50.52065651],
        ]
    ),
)
